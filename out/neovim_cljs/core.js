goog.provide('neovim_cljs.core');
goog.require('cljs.core');
goog.require('cljs.nodejs');
goog.require('cljs.core.async');
neovim_cljs.core.node$module$shelljs = require('shelljs');
cljs.nodejs.enable_util_print_BANG_.call(null);
neovim_cljs.core.tmp = "q";
neovim_cljs.core._main = (function neovim_cljs$core$_main(var_args){
var args__23302__auto__ = [];
var len__23299__auto___2852 = arguments.length;
var i__23300__auto___2853 = (0);
while(true){
if((i__23300__auto___2853 < len__23299__auto___2852)){
args__23302__auto__.push((arguments[i__23300__auto___2853]));

var G__2854 = (i__23300__auto___2853 + (1));
i__23300__auto___2853 = G__2854;
continue;
} else {
}
break;
}

var argseq__23303__auto__ = ((((0) < args__23302__auto__.length))?(new cljs.core.IndexedSeq(args__23302__auto__.slice((0)),(0),null)):null);
return neovim_cljs.core._main.cljs$core$IFn$_invoke$arity$variadic(argseq__23303__auto__);
});

neovim_cljs.core._main.cljs$core$IFn$_invoke$arity$variadic = (function (args){
cljs.core.println.call(null,neovim_cljs.core.q);

return cljs.core.println.call(null,"Hello world");
});

neovim_cljs.core._main.cljs$lang$maxFixedArity = (0);

neovim_cljs.core._main.cljs$lang$applyTo = (function (seq2851){
return neovim_cljs.core._main.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null,seq2851));
});

cljs.core._STAR_main_cli_fn_STAR_ = neovim_cljs.core._main;

//# sourceURL=out/neovim_cljs/core.js?rel=1512906488784
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0L25lb3ZpbV9jbGpzL2NvcmUuanM/cmVsPTE1MTI5MDY0ODg3ODQiLCJzb3VyY2VzIjpbImNvcmUuY2xqcz9yZWw9MTUxMjkwNjQ4ODc4NCJdLCJsaW5lQ291bnQiOjM4LCJtYXBwaW5ncyI6IkFBTUEsQUFBQ0E7QUFFRCx1QkFBQSx2QkFBS0M7QUFXTCxBQUFBLHlCQUFBLGlDQUFBQywxREFBTUs7QUFBTixBQUFBLElBQUFKLHNCQUFBO0FBQUEsQUFBQSxJQUFBQywwQkFBQSxBQUFBO0FBQUEsQUFBQSxJQUFBQyx3QkFBQTs7QUFBQSxBQUFBLEdBQUEsQ0FBQUEsd0JBQUFEO0FBQUEsQUFBQSxBQUFBRCx5QkFBQSxDQUFBLFVBQUFFOztBQUFBLGNBQUEsQ0FBQUEsd0JBQUE7Ozs7QUFBQTs7OztBQUFBLElBQUFDLHdCQUFBLEVBQUEsQ0FBQSxNQUFBLEFBQUFILDZCQUFBLEFBQUEsMEJBQUEsQUFBQUEsMEJBQUEsS0FBQSxJQUFBLE9BQUEsL0RBbTlGc0RXO0FBbjlGdEQsQUFBQSxPQUFBUCw0REFBQUQ7OztBQUFBLEFBQUEsQUFBQSxBQUFBQyw4REFBQSxXQUFlRztBQUFmLEFBQ0UsQUFBQ0MsNEJBQVFDOztBQUNULG1DQUFBLDVCQUFDRDs7O0FBRkgsQUFBQSxBQUFBSixpREFBQTs7QUFBQSxBQUFBLEFBQUFBLDJDQUFBLFdBQUFDO0FBQUEsQUFBQSxPQUFBRCw0REFBQSxBQUFBRSx3QkFBQUQ7OztBQUFBLEFBS0EsQUFBTUssb0NBQWNOIiwibmFtZXMiOlsiY2xqcy5ub2RlanMvZW5hYmxlLXV0aWwtcHJpbnQhIiwibmVvdmltLWNsanMuY29yZS90bXAiLCJ2YXJfYXJncyIsImFyZ3NfXzIzMzAyX19hdXRvX18iLCJsZW5fXzIzMjk5X19hdXRvX18iLCJpX18yMzMwMF9fYXV0b19fIiwiYXJnc2VxX18yMzMwM19fYXV0b19fIiwibmVvdmltLWNsanMuY29yZS8tbWFpbiIsInNlcTI4NTEiLCJjbGpzLmNvcmUvc2VxIiwiYXJncyIsImNsanMuY29yZS9wcmludGxuIiwibmVvdmltLWNsanMuY29yZS9xIiwiY2xqcy5jb3JlLyptYWluLWNsaS1mbioiLCJjbGpzLmNvcmUvSW5kZXhlZFNlcSJdLCJzb3VyY2VzQ29udGVudCI6WyIobnMgbmVvdmltLWNsanMuY29yZVxuICAoOnJlcXVpcmUtbWFjcm9zIFtjbGpzLmNvcmUuYXN5bmMubWFjcm9zIDphcyBhc3luYy1tYWNyb3MgOnJlZmVyIFtnbyBnby1sb29wXV0pXG4gICg6cmVxdWlyZSBbY2xqcy5ub2RlanMgOmFzIG5vZGVqc11cbiAgICAgICAgICAgIFtjbGpzLmNvcmUuYXN5bmMgOmFzIGFzeW5jIDpyZWZlciBbPiEgPCEgcHV0ISBjaGFuIGJ1ZmZlciBjbG9zZSEgdGltZW91dF1dXG4gICAgICAgICAgICBbc2hlbGxqc10pKVxuXG4obm9kZWpzL2VuYWJsZS11dGlsLXByaW50ISlcblxuKGRlZiB0bXAgXCJxXCIpXG5cbjs7IGNvbnN0IGNwID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpO1xuOzsgY29uc3QgYXR0YWNoID0gcmVxdWlyZSgnbmVvdmltJykuYXR0YWNoO1xuXG47OyBjb25zdCBudmltX3Byb2MgPSBjcC5zcGF3bignbnZpbScsIFsnLXUnLCAnTk9ORScsICctTicsICctLWVtYmVkJ10sIHt9KTtcblxuXG5cblxuXG4oZGVmbiAtbWFpbiBbJiBhcmdzXVxuICAocHJpbnRsbiBxKVxuICAocHJpbnRsbiAgXCJIZWxsbyB3b3JsZFwiKSlcblxuXG4oc2V0ISAqbWFpbi1jbGktZm4qIC1tYWluKVxuXG4iXX0=